
        function _base64ToArrayBuffer(base64) {
            var binary_string = window.atob(base64);
            var len = binary_string.length;
            var bytes = new Uint8Array(len);
            for (var i = 0; i < len; i++) {
                bytes[i] = binary_string.charCodeAt(i);
            }
            return bytes.buffer;
        }

        function _arrayBufferToBase64( buffer ) {
          var binary = '';
          var bytes = new Uint8Array( buffer );
          var len = bytes.byteLength;
          for (var i = 0; i < len; i++) {
             binary += String.fromCharCode( bytes[ i ] );
          }
          return window.btoa( binary );
        }

        document.addEventListener("DOMContentLoaded", function() {
            var old_prefilter = jQuery.htmlPrefilter;

            jQuery.htmlPrefilter = function(v) {
            
                var regs = [
                    /<a[^>]*href="(?<url>[^"]*)"[^>]*>/gi,
                    /<img[^>]*src="(?<url>[^"]*)"\/?>/gi,
                    /<source[^>]*src="(?<url>[^"]*)"/gi
                ];
                
                var replaces = {};

                for (i in regs)
                {
                    reg = regs[i];

                    var m = true;
                    var n = 0;
                    while (m && n < 100)
                    {
                        n += 1;
                        
                        m = reg.exec(v);
                        if (m)
                        {
                            if (m['groups'] && m['groups']['url'])
                            {
                                var url = m['groups']['url'];
                                if (server_data.hasOwnProperty(url))
                                {
                                    console.log(`Added url:${url} to be replaced with data of ${server_data[url].length} bytes length`);
                                    replaces[url] = server_data[url];                                    
                                }
                            }
                        }
                    }
                }
                
                for (let src in replaces)
                {
                    let dest = replaces[src];
                    v = v.replace(src, dest);
                }

                return old_prefilter(v);
            };
        });

        var server_data={
 "plugin/behaviors/index.js": "'use strict';\n\nallure.api.addTranslation('en', {\n    tab: {\n        behaviors: {\n            name: 'Behaviors'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Features by stories',\n            showAll: 'show all'\n        }\n    }\n});\n\nallure.api.addTranslation('ru', {\n    tab: {\n        behaviors: {\n            name: 'Функциональность'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Функциональность',\n            showAll: 'показать все'\n        }\n    }\n});\n\nallure.api.addTranslation('zh', {\n    tab: {\n        behaviors: {\n            name: '功能'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: '特性场景',\n            showAll: '显示所有'\n        }\n    }\n});\n\nallure.api.addTranslation('de', {\n    tab: {\n        behaviors: {\n            name: 'Verhalten'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Features nach Stories',\n            showAll: 'Zeige alle'\n        }\n    }\n});\n\nallure.api.addTranslation('nl', {\n    tab: {\n        behaviors: {\n            name: 'Functionaliteit'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Features en story’s',\n            showAll: 'Toon alle'\n        }\n    }\n});\n\nallure.api.addTranslation('he', {\n    tab: {\n        behaviors: {\n            name: 'התנהגויות'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'תכונות לפי סיפורי משתמש',\n            showAll: 'הצג הכול'\n        }\n    }\n});\n\nallure.api.addTranslation('br', {\n    tab: {\n        behaviors: {\n            name: 'Comportamentos'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Funcionalidades por história',\n            showAll: 'Mostrar tudo'\n        }\n    }\n});\n\nallure.api.addTranslation('ja', {\n    tab: {\n        behaviors: {\n            name: '振る舞い'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'ストーリー別の機能',\n            showAll: '全て表示'\n        }\n    }\n});\n\nallure.api.addTranslation('es', {\n    tab: {\n        behaviors: {\n            name: 'Funcionalidades'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Funcionalidades por Historias de Usuario',\n            showAll: 'mostrar todo'\n        }\n    }\n});\n\nallure.api.addTranslation('kr', {\n    tab: {\n        behaviors: {\n            name: '동작'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: '스토리별 기능',\n            showAll: '전체 보기'\n        }\n    }\n});\n\nallure.api.addTranslation('fr', {\n    tab: {\n        behaviors: {\n            name: 'Comportements'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Thèmes par histoires',\n            showAll: 'Montrer tout'\n        }\n    }\n});\n\nallure.api.addTranslation('pl', {\n    tab: {\n        behaviors: {\n            name: 'Zachowania'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Funkcje według historii',\n            showAll: 'pokaż wszystko'\n        }\n    }\n});\n\nallure.api.addTranslation('am', {\n    tab: {\n        behaviors: {\n            name: 'Վարքագծեր'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Ֆիչրները ըստ պատմությունների',\n            showAll: 'ցույց տալ բոլորը'\n        }\n    }\n});\n\nallure.api.addTranslation('az', {\n    tab: {\n        behaviors: {\n            name: 'Davranışlar'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Hekayələr üzrə xüsusiyyətlər',\n            showAll: 'hamısını göstər'\n        }\n    }\n});\n\nallure.api.addTranslation('sv', {\n    tab: {\n        behaviors: {\n            name: 'Beteenden'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Funktioner efter user stories',\n            showAll: 'visa allt'\n        }\n    }\n});\n\nallure.api.addTranslation('isv', {\n    tab: {\n        behaviors: {\n            name: 'Funkcionalnost',\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Funkcionalnost',\n            showAll: 'pokaži vsěčto',\n        }\n    }\n});\n\nallure.api.addTranslation('ka', {\n    tab: {\n        behaviors: {\n            name: 'ფუნქციონალი',\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'ფუნქციონალი',\n            showAll: 'ყველას ჩვენება',\n        }\n    }\n});\n\nallure.api.addTranslation('it', {\n    tab: {\n        behaviors: {\n            name: 'Comportamenti'\n        }\n    },\n    widget: {\n        behaviors: {\n            name: 'Funzionalità per storie',\n            showAll: 'Mostra tutto'\n        }\n    }\n});\n\nallure.api.addTab('behaviors', {\n    title: 'tab.behaviors.name', icon: 'fa fa-list',\n    route: 'behaviors(/)(:testGroup)(/)(:testResult)(/)(:testResultTab)(/)',\n    onEnter: (function (testGroup, testResult, testResultTab) {\n        return new allure.components.TreeLayout({\n            testGroup: testGroup,\n            testResult: testResult,\n            testResultTab: testResultTab,\n            tabName: 'tab.behaviors.name',\n            baseUrl: 'behaviors',\n            url: 'data/behaviors.json',\n            csvUrl: 'data/behaviors.csv'\n        });\n    })\n});\n\nallure.api.addWidget('widgets', 'behaviors', allure.components.WidgetStatusView.extend({\n    rowTag: 'a',\n    title: 'widget.behaviors.name',\n    baseUrl: 'behaviors',\n    showLinks: true\n}));\n", 
 "plugin/packages/index.js": "'use strict';\n\nallure.api.addTranslation('en', {\n    tab: {\n        packages: {\n            name: 'Packages'\n        }\n    }\n});\n\nallure.api.addTranslation('ru', {\n    tab: {\n        packages: {\n            name: 'Пакеты'\n        }\n    }\n});\n\nallure.api.addTranslation('zh', {\n    tab: {\n        packages: {\n            name: '包'\n        }\n    }\n});\n\nallure.api.addTranslation('de', {\n    tab: {\n        packages: {\n            name: 'Pakete'\n        }\n    }\n});\n\nallure.api.addTranslation('nl', {\n    tab: {\n        packages: {\n            name: 'Packages'\n        }\n    }\n});\n\nallure.api.addTranslation('he', {\n    tab: {\n        packages: {\n            name: 'חבילות'\n        }\n    }\n});\n\nallure.api.addTranslation('br', {\n    tab: {\n        packages: {\n            name: 'Pacotes'\n        }\n    }\n});\n\nallure.api.addTranslation('ja', {\n    tab: {\n        packages: {\n            name: 'パッケージ'\n        }\n    }\n});\n\nallure.api.addTranslation('es', {\n    tab: {\n        packages: {\n            name: 'Paquetes'\n        }\n    }\n});\n\nallure.api.addTranslation('kr', {\n    tab: {\n        packages: {\n            name: '패키지'\n        }\n    }\n});\n\nallure.api.addTranslation('fr', {\n    tab: {\n        packages: {\n            name: 'Paquets'\n        }\n    }\n});\n\nallure.api.addTranslation('pl', {\n    tab: {\n        packages: {\n            name: 'Pakiety'\n        }\n    }\n});\n\nallure.api.addTranslation('am', {\n    tab: {\n        packages: {\n            name: 'Փաթեթներ'\n        }\n    }\n});\n\nallure.api.addTranslation('az', {\n    tab: {\n        packages: {\n            name: 'Paketlər'\n        }\n    }\n});\n\nallure.api.addTranslation('sv', {\n    tab: {\n        packages: {\n            name: 'Paket'\n        }\n    }\n});\n\nallure.api.addTranslation('isv', {\n    tab: {\n        packages: {\n            name: 'Pakety'\n        }\n    }\n});\n\nallure.api.addTranslation('ka', {\n    tab: {\n        packages: {\n            name: 'პაკეტები'\n        }\n    }\n});\n\nallure.api.addTranslation('it', {\n    tab: {\n        packages: {\n            name: 'Pacchetti'\n        }\n    }\n});\n\nallure.api.addTab('packages', {\n    title: 'tab.packages.name', icon: 'fa fa-align-left',\n    route: 'packages(/)(:testGroup)(/)(:testResult)(/)(:testResultTab)(/)',\n    onEnter: (function (testGroup, testResult, testResultTab) {\n        return new allure.components.TreeLayout({\n            testGroup: testGroup,\n            testResult: testResult,\n            testResultTab: testResultTab,\n            tabName: 'tab.packages.name',\n            baseUrl: 'packages',\n            url: 'data/packages.json'\n        });\n    })\n});\n", 
 "plugin/screen-diff/styles.css": ".screen-diff__switchers {\n  margin-bottom: 1em;\n}\n\n.screen-diff__switchers label + label {\n  margin-left: 1em;\n}\n\n.screen-diff__overlay {\n  position: relative;\n  cursor: col-resize;\n}\n\n.screen-diff__container {\n  overflow-x: auto;\n}\n\n.screen-diff__image-over {\n  top: 0;\n  left: 0;\n  bottom: 0;\n  background: #fff;\n  position: absolute;\n  overflow: hidden;\n  box-shadow: 2px 0 1px -1px #aaa;\n}\n\n.screen-diff-error {\n  color: #fd5a3e;\n}\n", 
 "plugin/screen-diff/index.js": "(function () {\n    var settings = allure.getPluginSettings('screen-diff', { diffType: 'diff' });\n\n    function renderImage(src) {\n        return (\n            '&lt;div class=\"screen-diff__container\"&gt;' +\n            '&lt;img class=\"screen-diff__image\" src=\"' +\n            src +\n            '\"&gt;' +\n            '&lt;/div&gt;'\n        );\n    }\n\n    function findImage(data, name) {\n        if (data.testStage && data.testStage.attachments) {\n            var matchedImage = data.testStage.attachments.filter(function (attachment) {\n                return attachment.name === name;\n            })[0];\n            if (matchedImage) {\n                return 'data/attachments/' + matchedImage.source;\n            }\n        }\n        return null;\n    }\n\n    function renderDiffContent(type, diffImage, actualImage, expectedImage) {\n        if (type === 'diff') {\n            if (diffImage) {\n                return renderImage(diffImage);\n            }\n        }\n        if (type === 'overlay' && expectedImage) {\n            return (\n                '&lt;div class=\"screen-diff__overlay screen-diff__container\"&gt;' +\n                '&lt;img class=\"screen-diff__image\" src=\"' +\n                expectedImage +\n                '\"&gt;' +\n                '&lt;div class=\"screen-diff__image-over\"&gt;' +\n                '&lt;img class=\"screen-diff__image\" src=\"' +\n                actualImage +\n                '\"&gt;' +\n                '&lt;/div&gt;' +\n                '&lt;/div&gt;'\n            );\n        }\n        if (actualImage) {\n            return renderImage(actualImage);\n        }\n        return 'No diff data provided';\n    }\n\n    var TestResultView = Backbone.Marionette.View.extend({\n        regions: {\n            subView: '.screen-diff-view',\n        },\n        template: function () {\n            return '&lt;div class=\"screen-diff-view\"&gt;&lt;/div&gt;';\n        },\n        onRender: function () {\n            var data = this.model.toJSON();\n            var testType = data.labels.filter(function (label) {\n                return label.name === 'testType';\n            })[0];\n            var diffImage = findImage(data, 'diff');\n            var actualImage = findImage(data, 'actual');\n            var expectedImage = findImage(data, 'expected');\n            if (!testType || testType.value !== 'screenshotDiff') {\n                return;\n            }\n            this.showChildView(\n                'subView',\n                new ScreenDiffView({\n                    diffImage: diffImage,\n                    actualImage: actualImage,\n                    expectedImage: expectedImage,\n                }),\n            );\n        },\n    });\n    var ErrorView = Backbone.Marionette.View.extend({\n        templateContext: function () {\n            return this.options;\n        },\n        template: function (data) {\n            return '&lt;pre class=\"screen-diff-error\"&gt;' + data.error + '&lt;/pre&gt;';\n        },\n    });\n    var AttachmentView = Backbone.Marionette.View.extend({\n        regions: {\n            subView: '.screen-diff-view',\n        },\n        template: function () {\n            return '&lt;div class=\"screen-diff-view\"&gt;&lt;/div&gt;';\n        },\n        onRender: function () {\n            jQuery\n                .getJSON(this.options.sourceUrl)\n                .then(this.renderScreenDiffView.bind(this), this.renderErrorView.bind(this));\n        },\n        renderErrorView: function (error) {\n            console.log(error);\n            this.showChildView(\n                'subView',\n                new ErrorView({\n                    error: error.statusText,\n                }),\n            );\n        },\n        renderScreenDiffView: function (data) {\n            this.showChildView(\n                'subView',\n                new ScreenDiffView({\n                    diffImage: data.diff,\n                    actualImage: data.actual,\n                    expectedImage: data.expected,\n                }),\n            );\n        },\n    });\n\n    var ScreenDiffView = Backbone.Marionette.View.extend({\n        className: 'pane__section',\n        events: function () {\n            return {\n                ['click [name=\"screen-diff-type-' + this.cid + '\"]']: 'onDiffTypeChange',\n                'mousemove .screen-diff__overlay': 'onOverlayMove',\n            };\n        },\n        initialize: function (options) {\n            this.diffImage = options.diffImage;\n            this.actualImage = options.actualImage;\n            this.expectedImage = options.expectedImage;\n            this.radioName = 'screen-diff-type-' + this.cid;\n        },\n        templateContext: function () {\n            return {\n                diffType: settings.get('diffType'),\n                diffImage: this.diffImage,\n                actualImage: this.actualImage,\n                expectedImage: this.expectedImage,\n                radioName: this.radioName,\n            };\n        },\n        template: function (data) {\n            if (!data.diffImage && !data.actualImage && !data.expectedImage) {\n                return '';\n            }\n\n            return (\n                '&lt;h3 class=\"pane__section-title\"&gt;Screen Diff&lt;/h3&gt;' +\n                '&lt;div class=\"screen-diff__content\"&gt;' +\n                '&lt;div class=\"screen-diff__switchers\"&gt;' +\n                '&lt;label&gt;&lt;input type=\"radio\" name=\"' +\n                data.radioName +\n                '\" value=\"diff\"&gt; Show diff&lt;/label&gt;' +\n                '&lt;label&gt;&lt;input type=\"radio\" name=\"' +\n                data.radioName +\n                '\" value=\"overlay\"&gt; Show overlay&lt;/label&gt;' +\n                '&lt;/div&gt;' +\n                renderDiffContent(\n                    data.diffType,\n                    data.diffImage,\n                    data.actualImage,\n                    data.expectedImage,\n                ) +\n                '&lt;/div&gt;'\n            );\n        },\n        adjustImageSize: function (event) {\n            var overImage = this.$(event.target);\n            overImage.width(overImage.width());\n        },\n        onRender: function () {\n            const diffType = settings.get('diffType');\n            this.$('[name=\"' + this.radioName + '\"][value=\"' + diffType + '\"]').prop(\n                'checked',\n                true,\n            );\n            if (diffType === 'overlay') {\n                this.$('.screen-diff__image-over img').on('load', this.adjustImageSize.bind(this));\n            }\n        },\n        onOverlayMove: function (event) {\n            var pageX = event.pageX;\n            var containerScroll = this.$('.screen-diff__container').scrollLeft();\n            var elementX = event.currentTarget.getBoundingClientRect().left;\n            var delta = pageX - elementX + containerScroll;\n            this.$('.screen-diff__image-over').width(delta);\n        },\n        onDiffTypeChange: function (event) {\n            settings.save('diffType', event.target.value);\n            this.render();\n        },\n    });\n    allure.api.addTestResultBlock(TestResultView, { position: 'before' });\n    allure.api.addAttachmentViewer('application/vnd.allure.image.diff', {\n        View: AttachmentView,\n        icon: 'fa fa-exchange',\n    });\n})();\n", 
 "history/duration-trend.json": "[{\"data\":{\"duration\":23929}}]", 
 "history/retry-trend.json": "[{\"data\":{\"run\":4,\"retry\":0}}]", 
 "history/history.json": "{\"34f14b1524055fe97c693e8de60382f3\":{\"statistic\":{\"failed\":0,\"broken\":1,\"skipped\":0,\"passed\":0,\"unknown\":0,\"total\":1},\"items\":[{\"uid\":\"13d46111901530d1\",\"status\":\"broken\",\"statusDetails\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0}}]},\"26ba50f2b1afd6b54f646a58e9b45908\":{\"statistic\":{\"failed\":0,\"broken\":1,\"skipped\":0,\"passed\":0,\"unknown\":0,\"total\":1},\"items\":[{\"uid\":\"d1c2c50ccf4e8bac\",\"status\":\"broken\",\"statusDetails\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0}}]},\"0c0cc63986cea6f8d82895932e5223da\":{\"statistic\":{\"failed\":0,\"broken\":1,\"skipped\":0,\"passed\":0,\"unknown\":0,\"total\":1},\"items\":[{\"uid\":\"2f034fe01bbd6de5\",\"status\":\"broken\",\"statusDetails\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0}}]},\"57d6f0d705b0999fc72f1807593c55e3\":{\"statistic\":{\"failed\":0,\"broken\":0,\"skipped\":0,\"passed\":1,\"unknown\":0,\"total\":1},\"items\":[{\"uid\":\"4a3d4cdf67380a69\",\"status\":\"passed\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847}}]}}", 
 "history/categories-trend.json": "[{\"data\":{\"Test defects\":3}}]", 
 "history/history-trend.json": "[{\"data\":{\"failed\":0,\"broken\":3,\"skipped\":0,\"passed\":1,\"unknown\":0,\"total\":4}}]", 
 "export/influxDbData.txt": "launch_status failed=0 1752552544000000000\nlaunch_status broken=3 1752552544000000000\nlaunch_status passed=1 1752552544000000000\nlaunch_status skipped=0 1752552544000000000\nlaunch_status unknown=0 1752552544000000000\nlaunch_time duration=23929 1752552544000000000\nlaunch_time min_duration=0 1752552544000000000\nlaunch_time max_duration=11847 1752552544000000000\nlaunch_time sum_duration=11847 1752552544000000000\nlaunch_time start=1752552515286 1752552544000000000\nlaunch_time stop=1752552539215 1752552544000000000\nlaunch_problems test_defects=3 1752552544000000000\nlaunch_retries retries=0 1752552544000000000\nlaunch_retries run=4 1752552544000000000\n", 
 "export/mail.html": "data:text/html;base64, PCFET0NUWVBFIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDx0aXRsZT5BbGx1cmUgUmVwb3J0IHN1bW1hcnkgbWFpbDwvdGl0bGU+CjwvaGVhZD4KPGJvZHk+CiAgICBNYWlsIGJvZHkKPC9ib2R5Pgo8L2h0bWw+Cg==", 
 "export/prometheusData.txt": "launch_status_failed 0\nlaunch_status_broken 3\nlaunch_status_passed 1\nlaunch_status_skipped 0\nlaunch_status_unknown 0\nlaunch_time_duration 23929\nlaunch_time_min_duration 0\nlaunch_time_max_duration 11847\nlaunch_time_sum_duration 11847\nlaunch_time_start 1752552515286\nlaunch_time_stop 1752552539215\nlaunch_problems_test_defects 3\nlaunch_retries_retries 0\nlaunch_retries_run 4\n", 
 "data/categories.json": "{\"uid\":\"4b4757e66a1912dae1a509f688f20b0f\",\"name\":\"categories\",\"children\":[{\"name\":\"Test defects\",\"children\":[{\"name\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\",\"children\":[{\"name\":\"test_login[case_data1]\",\"uid\":\"d1c2c50ccf4e8bac\",\"parentUid\":\"2083cc239eb656df62ed9b2cb08acaa3\",\"status\":\"broken\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login002', 'case_name': '登录失败-用户密码不匹配', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456789'}, 'expected_result': 'Wrong email address or password'}\"],\"tags\":[]},{\"name\":\"test_login[case_data2]\",\"uid\":\"2f034fe01bbd6de5\",\"parentUid\":\"2083cc239eb656df62ed9b2cb08acaa3\",\"status\":\"broken\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login003', 'case_name': '登录成功', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'START RIDING'}\"],\"tags\":[]},{\"name\":\"test_go_into_personal_info_page[case_data0]\",\"uid\":\"13d46111901530d1\",\"parentUid\":\"2083cc239eb656df62ed9b2cb08acaa3\",\"status\":\"broken\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'home001', 'case_name': '点击个人信息按钮进入到个人信息页面', 'expected_result': 'Settings'}\"],\"tags\":[]}],\"uid\":\"2083cc239eb656df62ed9b2cb08acaa3\"}],\"uid\":\"bdbf199525818fae7a8651db9eafe741\"}]}", 
 "data/categories.csv": "\"BROKEN\",\"CATEGORY\",\"FAILED\",\"PASSED\",\"SKIPPED\",\"UNKNOWN\"\n\"3\",\"Test defects\",\"0\",\"0\",\"0\",\"0\"\n", 
 "data/suites.json": "{\"uid\":\"98d3104e051c652961429bf95fa0b5d6\",\"name\":\"suites\",\"children\":[{\"name\":\"test_case\",\"children\":[{\"name\":\"test_login\",\"children\":[{\"name\":\"TestCase\",\"children\":[{\"name\":\"登录失败-用户名不存在\",\"uid\":\"4a3d4cdf67380a69\",\"parentUid\":\"9fac7ae1c7c21376c317efe480985b1a\",\"status\":\"passed\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login001', 'case_name': '登录失败-用户名不存在', 'all_params': {'username': 'abc@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'User Missing'}\"],\"tags\":[]},{\"name\":\"test_login[case_data1]\",\"uid\":\"d1c2c50ccf4e8bac\",\"parentUid\":\"9fac7ae1c7c21376c317efe480985b1a\",\"status\":\"broken\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login002', 'case_name': '登录失败-用户密码不匹配', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456789'}, 'expected_result': 'Wrong email address or password'}\"],\"tags\":[]},{\"name\":\"test_login[case_data2]\",\"uid\":\"2f034fe01bbd6de5\",\"parentUid\":\"9fac7ae1c7c21376c317efe480985b1a\",\"status\":\"broken\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login003', 'case_name': '登录成功', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'START RIDING'}\"],\"tags\":[]}],\"uid\":\"9fac7ae1c7c21376c317efe480985b1a\"}],\"uid\":\"b0d25e7592ecf0ad5c1e978c2b721247\"},{\"name\":\"test_home\",\"children\":[{\"name\":\"TestHome\",\"children\":[{\"name\":\"test_go_into_personal_info_page[case_data0]\",\"uid\":\"13d46111901530d1\",\"parentUid\":\"6801c851cb02705983df2a2b35ebcae9\",\"status\":\"broken\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'home001', 'case_name': '点击个人信息按钮进入到个人信息页面', 'expected_result': 'Settings'}\"],\"tags\":[]}],\"uid\":\"6801c851cb02705983df2a2b35ebcae9\"}],\"uid\":\"a009ee0497f79184ba06a66ab43bfcb5\"}],\"uid\":\"86abcc46617c603d802c3e378b13740e\"}]}", 
 "data/timeline.json": "{\"uid\":\"ab17fc5a4eb3bca4b216b548c7f9fcbc\",\"name\":\"timeline\",\"children\":[{\"name\":\"waynes-MacBook-Air.local\",\"children\":[{\"name\":\"1504-MainThread\",\"children\":[{\"name\":\"test_login[case_data2]\",\"uid\":\"2f034fe01bbd6de5\",\"parentUid\":\"9eaaafcd5179558130f6f9b6322f520c\",\"status\":\"broken\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login003', 'case_name': '登录成功', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'START RIDING'}\"],\"tags\":[]},{\"name\":\"登录失败-用户名不存在\",\"uid\":\"4a3d4cdf67380a69\",\"parentUid\":\"9eaaafcd5179558130f6f9b6322f520c\",\"status\":\"passed\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login001', 'case_name': '登录失败-用户名不存在', 'all_params': {'username': 'abc@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'User Missing'}\"],\"tags\":[]},{\"name\":\"test_login[case_data1]\",\"uid\":\"d1c2c50ccf4e8bac\",\"parentUid\":\"9eaaafcd5179558130f6f9b6322f520c\",\"status\":\"broken\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login002', 'case_name': '登录失败-用户密码不匹配', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456789'}, 'expected_result': 'Wrong email address or password'}\"],\"tags\":[]},{\"name\":\"test_go_into_personal_info_page[case_data0]\",\"uid\":\"13d46111901530d1\",\"parentUid\":\"9eaaafcd5179558130f6f9b6322f520c\",\"status\":\"broken\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'home001', 'case_name': '点击个人信息按钮进入到个人信息页面', 'expected_result': 'Settings'}\"],\"tags\":[]}],\"uid\":\"9eaaafcd5179558130f6f9b6322f520c\"}],\"uid\":\"1e6d94070b98b5a7a90c91ed5621bd38\"}]}", 
 "data/packages.json": "{\"uid\":\"83edc06c07f9ae9e47eb6dd1b683e4e2\",\"name\":\"packages\",\"children\":[{\"name\":\"test_case\",\"children\":[{\"name\":\"test_login\",\"children\":[{\"name\":\"登录失败-用户名不存在\",\"uid\":\"4a3d4cdf67380a69\",\"parentUid\":\"bc19b968b5c7989eda8450dbfaf01ab2\",\"status\":\"passed\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login001', 'case_name': '登录失败-用户名不存在', 'all_params': {'username': 'abc@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'User Missing'}\"],\"tags\":[]},{\"name\":\"test_login[case_data1]\",\"uid\":\"d1c2c50ccf4e8bac\",\"parentUid\":\"bc19b968b5c7989eda8450dbfaf01ab2\",\"status\":\"broken\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login002', 'case_name': '登录失败-用户密码不匹配', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456789'}, 'expected_result': 'Wrong email address or password'}\"],\"tags\":[]},{\"name\":\"test_login[case_data2]\",\"uid\":\"2f034fe01bbd6de5\",\"parentUid\":\"bc19b968b5c7989eda8450dbfaf01ab2\",\"status\":\"broken\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login003', 'case_name': '登录成功', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'START RIDING'}\"],\"tags\":[]}],\"uid\":\"bc19b968b5c7989eda8450dbfaf01ab2\"},{\"name\":\"test_home\",\"children\":[{\"name\":\"test_go_into_personal_info_page[case_data0]\",\"uid\":\"13d46111901530d1\",\"parentUid\":\"84c7fcf59c65909e5aceb78fe4c0ff20\",\"status\":\"broken\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'home001', 'case_name': '点击个人信息按钮进入到个人信息页面', 'expected_result': 'Settings'}\"],\"tags\":[]}],\"uid\":\"84c7fcf59c65909e5aceb78fe4c0ff20\"}],\"uid\":\"3b2e467b921b0ea8d4803b9c79d92d0c\"}]}", 
 "data/suites.csv": "\"DESCRIPTION\",\"DURATION IN MS\",\"NAME\",\"PARENT SUITE\",\"START TIME\",\"STATUS\",\"STOP TIME\",\"SUB SUITE\",\"SUITE\",\"TEST CLASS\",\"TEST METHOD\"\n\"\",\"11847\",\"登录失败-用户名不存在\",\"test_case\",\"Tue Jul 15 12:08:35 CST 2025\",\"passed\",\"Tue Jul 15 12:08:47 CST 2025\",\"TestCase\",\"test_login\",\"\",\"\"\n\"\",\"0\",\"test_login[case_data1]\",\"test_case\",\"Tue Jul 15 12:08:50 CST 2025\",\"broken\",\"Tue Jul 15 12:08:50 CST 2025\",\"TestCase\",\"test_login\",\"\",\"\"\n\"\",\"0\",\"test_login[case_data2]\",\"test_case\",\"Tue Jul 15 12:08:54 CST 2025\",\"broken\",\"Tue Jul 15 12:08:54 CST 2025\",\"TestCase\",\"test_login\",\"\",\"\"\n\"\",\"0\",\"test_go_into_personal_info_page[case_data0]\",\"test_case\",\"Tue Jul 15 12:08:59 CST 2025\",\"broken\",\"Tue Jul 15 12:08:59 CST 2025\",\"TestHome\",\"test_home\",\"\",\"\"\n", 
 "data/behaviors.json": "{\"uid\":\"b1a8273437954620fa374b796ffaacdd\",\"name\":\"behaviors\",\"children\":[{\"name\":\"Velotric App应用\",\"children\":[{\"name\":\"登录模块\",\"children\":[{\"name\":\"登录失败-用户名不存在\",\"uid\":\"4a3d4cdf67380a69\",\"parentUid\":\"cf7fbeec3dd5e0d7b17aae99abfd83bc\",\"status\":\"passed\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login001', 'case_name': '登录失败-用户名不存在', 'all_params': {'username': 'abc@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'User Missing'}\"],\"tags\":[]},{\"name\":\"test_login[case_data1]\",\"uid\":\"d1c2c50ccf4e8bac\",\"parentUid\":\"cf7fbeec3dd5e0d7b17aae99abfd83bc\",\"status\":\"broken\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login002', 'case_name': '登录失败-用户密码不匹配', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456789'}, 'expected_result': 'Wrong email address or password'}\"],\"tags\":[]},{\"name\":\"test_login[case_data2]\",\"uid\":\"2f034fe01bbd6de5\",\"parentUid\":\"cf7fbeec3dd5e0d7b17aae99abfd83bc\",\"status\":\"broken\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'login003', 'case_name': '登录成功', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'START RIDING'}\"],\"tags\":[]}],\"uid\":\"cf7fbeec3dd5e0d7b17aae99abfd83bc\"}],\"uid\":\"5fe60c0d7482b4f909b30f74aca4aa47\"},{\"name\":\"velotric app应用\",\"children\":[{\"name\":\"首页模块\",\"children\":[{\"name\":\"test_go_into_personal_info_page[case_data0]\",\"uid\":\"13d46111901530d1\",\"parentUid\":\"bcced2d3c56c60eeef34cac5d591fd7f\",\"status\":\"broken\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"flaky\":false,\"newFailed\":false,\"newPassed\":false,\"newBroken\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"parameters\":[\"{'case_id': 'home001', 'case_name': '点击个人信息按钮进入到个人信息页面', 'expected_result': 'Settings'}\"],\"tags\":[]}],\"uid\":\"bcced2d3c56c60eeef34cac5d591fd7f\"}],\"uid\":\"914b4c23401b969297ac0e674a638288\"}]}", 
 "data/behaviors.csv": "\"BROKEN\",\"EPIC\",\"FAILED\",\"FEATURE\",\"PASSED\",\"SKIPPED\",\"STORY\",\"UNKNOWN\"\n\"2\",\"Velotric App应用\",\"0\",\"\",\"1\",\"0\",\"登录模块\",\"0\"\n\"1\",\"velotric app应用\",\"0\",\"\",\"0\",\"0\",\"首页模块\",\"0\"\n", 
 "data/test-cases/d1c2c50ccf4e8bac.json": "{\"uid\":\"d1c2c50ccf4e8bac\",\"name\":\"test_login[case_data1]\",\"fullName\":\"test_case.test_login.TestCase#test_login\",\"historyId\":\"26ba50f2b1afd6b54f646a58e9b45908\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"status\":\"broken\",\"statusMessage\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\",\"statusTrace\":\"request = &lt;SubRequest 'login_driver' for &lt;Function test_login[case_data1]&gt;&gt;\\n\\n    @pytest.fixture(scope='function')\\n    # function每次启动一次设备信息\\n    # session 一次设备信息打开用例全运行完在关闭\\n    def login_driver(request):\\n        options = UiAutomator2Options()\\n        options.platform_name = \\\"Android\\\"\\n        options.platform_version = \\\"14\\\"\\n        options.device_name = \\\"R3CT90HL0QB\\\"\\n        options.automation_name = \\\"UiAutomator2\\\"\\n        options.app_package = \\\"com.mddoscar.velotricbike\\\"\\n        options.app_activity = \\\"com.example.velotric_app.MainActivity\\\"\\n        options.auto_grant_permissions = True\\n        options.no_reset = True\\n    \\n        driver = webdriver.Remote(\\\"http://127.0.0.1:4723\\\", options=options)\\n    \\n        time.sleep(2)\\n    \\n        # 点击 Sign 按钮\\n&gt;       driver.find_element(*sign_btn).click()\\n\\nconftest.py:28: \\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\\n    return self.execute(Command.FIND_ELEMENT, {\\\"using\\\": by, \\\"value\\\": value})[\\\"value\\\"]\\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\\n    self.error_handler.check_response(response)\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n\\nself = &lt;appium.webdriver.errorhandler.MobileErrorHandler object at 0x107e01cf0&gt;\\nresponse = {'status': 404, 'value': '{\\\"value\\\":{\\\"error\\\":\\\"no such element\\\",\\\"message\\\":\\\"An element could not be located on the page u...ions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\\"}}'}\\n\\n    def check_response(self, response: Dict[str, Any]) -&gt; None:\\n        \\\"\\\"\\\"\\n        https://www.w3.org/TR/webdriver/#errors\\n        \\\"\\\"\\\"\\n        payload = response.get('value', '')\\n        if isinstance(payload, dict):\\n            payload_dict = payload\\n        else:\\n            try:\\n                payload_dict = json.loads(payload)\\n            except (json.JSONDecodeError, TypeError):\\n                return\\n            if not isinstance(payload_dict, dict):\\n                return\\n        value = payload_dict.get('value')\\n        if not isinstance(value, dict):\\n            return\\n        error = value.get('error')\\n        if not error:\\n            return\\n    \\n        message = value.get('message', error)\\n        stacktrace = value.get('stacktrace', '')\\n        # In theory, we should also be checking HTTP status codes.\\n        # Java client, for example, prints a warning if the actual `error`\\n        # value does not match to the response's HTTP status code.\\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\\n            error, sel_exceptions.WebDriverException\\n        )\\n        if exception_class is sel_exceptions.WebDriverException and message:\\n            if message == 'No such context found.':\\n                exception_class = appium_exceptions.NoSuchContextException\\n            elif message == 'That command could not be executed in the current context.':\\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\\n    \\n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\\n            raise sel_exceptions.UnexpectedAlertPresentException(\\n                msg=message,\\n                stacktrace=format_stacktrace(stacktrace),\\n                alert_text=value.get('data'),\\n            )\\n&gt;       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nE       Stacktrace:\\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\\nE           at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\nE           at processTicksAndRejections (node:internal/process/task_queues:105:5)\\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\nE           at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\n\\n.venv/lib/python3.10/site-packages/appium/webdriver/errorhandler.py:125: NoSuchElementException\",\"flaky\":false,\"newFailed\":false,\"newBroken\":false,\"newPassed\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"beforeStages\":[{\"name\":\"login_driver\",\"time\":{\"start\":1752552530598,\"stop\":1752552534863,\"duration\":4265},\"status\":\"broken\",\"statusMessage\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\n\",\"statusTrace\":\"  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 38, in run_old_style_hookwrapper\\n    res = yield\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 139, in _multicall\\n    teardown.throw(exception)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/setuponly.py\\\", line 36, in pytest_fixture_setup\\n    return (yield)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 121, in _multicall\\n    res = hook_impl.function(*args)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\\\", line 1195, in pytest_fixture_setup\\n    result = call_fixture_func(fixturefunc, request, kwargs)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\\\", line 922, in call_fixture_func\\n    fixture_result = next(generator)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/conftest.py\\\", line 28, in login_driver\\n    driver.find_element(*sign_btn).click()\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\\\", line 922, in find_element\\n    return self.execute(Command.FIND_ELEMENT, {\\\"using\\\": by, \\\"value\\\": value})[\\\"value\\\"]\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\\\", line 454, in execute\\n    self.error_handler.check_response(response)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/appium/webdriver/errorhandler.py\\\", line 125, in check_response\\n    raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\\n\",\"steps\":[],\"attachments\":[],\"parameters\":[],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":true,\"attachmentsCount\":0,\"attachmentStep\":false}],\"afterStages\":[],\"labels\":[{\"name\":\"epic\",\"value\":\"Velotric App应用\"},{\"name\":\"story\",\"value\":\"登录模块\"},{\"name\":\"parentSuite\",\"value\":\"test_case\"},{\"name\":\"suite\",\"value\":\"test_login\"},{\"name\":\"subSuite\",\"value\":\"TestCase\"},{\"name\":\"host\",\"value\":\"waynes-MacBook-Air.local\"},{\"name\":\"thread\",\"value\":\"1504-MainThread\"},{\"name\":\"framework\",\"value\":\"pytest\"},{\"name\":\"language\",\"value\":\"cpython3\"},{\"name\":\"package\",\"value\":\"test_case.test_login\"},{\"name\":\"resultFormat\",\"value\":\"allure2\"}],\"parameters\":[{\"name\":\"case_data\",\"value\":\"{'case_id': 'login002', 'case_name': '登录失败-用户密码不匹配', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456789'}, 'expected_result': 'Wrong email address or password'}\"}],\"links\":[],\"hidden\":false,\"retry\":false,\"extra\":{\"severity\":\"normal\",\"retries\":[],\"categories\":[{\"name\":\"Test defects\",\"matchedStatuses\":[]}],\"tags\":[]},\"source\":\"d1c2c50ccf4e8bac.json\",\"parameterValues\":[\"{'case_id': 'login002', 'case_name': '登录失败-用户密码不匹配', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456789'}, 'expected_result': 'Wrong email address or password'}\"]}", 
 "data/test-cases/4a3d4cdf67380a69.json": "{\"uid\":\"4a3d4cdf67380a69\",\"name\":\"登录失败-用户名不存在\",\"fullName\":\"test_case.test_login.TestCase#test_login\",\"historyId\":\"57d6f0d705b0999fc72f1807593c55e3\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"status\":\"passed\",\"flaky\":false,\"newFailed\":false,\"newBroken\":false,\"newPassed\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"beforeStages\":[{\"name\":\"login_driver\",\"time\":{\"start\":1752552507682,\"stop\":1752552515284,\"duration\":7602},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[],\"stepsCount\":0,\"hasContent\":false,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"testStage\":{\"status\":\"passed\",\"steps\":[{\"name\":\"输入用户邮箱：abc@gmail.com\",\"time\":{\"start\":1752552520291,\"stop\":1752552522137,\"duration\":1846},\"status\":\"passed\",\"steps\":[{\"name\":\"点击元素\",\"time\":{\"start\":1752552520292,\"stop\":1752552521493,\"duration\":1201},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552520292,\"stop\":1752552520384,\"duration\":92},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Email\\\"]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Email\\\"]')\"}],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"清空输入框\",\"time\":{\"start\":1752552521494,\"stop\":1752552521586,\"duration\":92},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552521494,\"stop\":1752552521555,\"duration\":61},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Email\\\"]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Email\\\"]')\"}],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"输入元素\",\"time\":{\"start\":1752552521586,\"stop\":1752552522137,\"duration\":551},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552521587,\"stop\":1752552521635,\"duration\":48},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Email\\\"]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Email\\\"]')\"},{\"name\":\"text\",\"value\":\"'abc@gmail.com'\"}],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[],\"stepsCount\":6,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"输入用户密码：Yang123456\",\"time\":{\"start\":1752552522138,\"stop\":1752552523606,\"duration\":1468},\"status\":\"passed\",\"steps\":[{\"name\":\"点击元素\",\"time\":{\"start\":1752552522138,\"stop\":1752552523439,\"duration\":1301},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552522138,\"stop\":1752552522686,\"duration\":548},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Password\\\"]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Password\\\"]')\"}],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"清空输入框\",\"time\":{\"start\":1752552523439,\"stop\":1752552523527,\"duration\":88},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552523439,\"stop\":1752552523499,\"duration\":60},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Password\\\"]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Password\\\"]')\"}],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"输入元素\",\"time\":{\"start\":1752552523527,\"stop\":1752552523605,\"duration\":78},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552523528,\"stop\":1752552523572,\"duration\":44},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Password\\\"]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.EditText[@hint=\\\"Password\\\"]')\"},{\"name\":\"text\",\"value\":\"'Yang123456'\"}],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[],\"stepsCount\":6,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"点击登录\",\"time\":{\"start\":1752552523606,\"stop\":1752552526058,\"duration\":2452},\"status\":\"passed\",\"steps\":[{\"name\":\"隐藏键盘\",\"time\":{\"start\":1752552523606,\"stop\":1752552525134,\"duration\":1528},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[],\"stepsCount\":0,\"hasContent\":false,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"点击元素\",\"time\":{\"start\":1752552525134,\"stop\":1752552526058,\"duration\":924},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552525135,\"stop\":1752552525963,\"duration\":828},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.view.View[@content-desc=\\\"Log in\\\"]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.view.View[@content-desc=\\\"Log in\\\"]')\"}],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[],\"stepsCount\":3,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"登录失败断言\",\"time\":{\"start\":1752552526059,\"stop\":1752552527133,\"duration\":1074},\"status\":\"passed\",\"steps\":[{\"name\":\"显示等待元素\",\"time\":{\"start\":1752552526059,\"stop\":1752552527106,\"duration\":1047},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[{\"name\":\"place\",\"value\":\"('xpath', '//android.widget.ImageView[string-length(@content-desc) &gt; 0]')\"}],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[],\"stepsCount\":1,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false},{\"name\":\"添加成功的截图\",\"time\":{\"start\":1752552527133,\"stop\":1752552527495,\"duration\":362},\"status\":\"passed\",\"steps\":[],\"attachments\":[{\"uid\":\"3335e4fe9c47e333\",\"name\":\"成功截图\",\"source\":\"3335e4fe9c47e333.png\",\"type\":\"image/png\",\"size\":104614}],\"parameters\":[],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":1,\"attachmentStep\":false}],\"attachments\":[],\"parameters\":[],\"stepsCount\":21,\"hasContent\":true,\"shouldDisplayMessage\":false,\"attachmentsCount\":1,\"attachmentStep\":false},\"afterStages\":[{\"name\":\"login_driver::0\",\"time\":{\"start\":1752552527498,\"stop\":1752552530501,\"duration\":3003},\"status\":\"passed\",\"steps\":[],\"attachments\":[],\"parameters\":[],\"stepsCount\":0,\"hasContent\":false,\"shouldDisplayMessage\":false,\"attachmentsCount\":0,\"attachmentStep\":false}],\"labels\":[{\"name\":\"epic\",\"value\":\"Velotric App应用\"},{\"name\":\"story\",\"value\":\"登录模块\"},{\"name\":\"parentSuite\",\"value\":\"test_case\"},{\"name\":\"suite\",\"value\":\"test_login\"},{\"name\":\"subSuite\",\"value\":\"TestCase\"},{\"name\":\"host\",\"value\":\"waynes-MacBook-Air.local\"},{\"name\":\"thread\",\"value\":\"1504-MainThread\"},{\"name\":\"framework\",\"value\":\"pytest\"},{\"name\":\"language\",\"value\":\"cpython3\"},{\"name\":\"package\",\"value\":\"test_case.test_login\"},{\"name\":\"resultFormat\",\"value\":\"allure2\"}],\"parameters\":[{\"name\":\"case_data\",\"value\":\"{'case_id': 'login001', 'case_name': '登录失败-用户名不存在', 'all_params': {'username': 'abc@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'User Missing'}\"}],\"links\":[],\"hidden\":false,\"retry\":false,\"extra\":{\"severity\":\"normal\",\"retries\":[],\"categories\":[],\"tags\":[]},\"source\":\"4a3d4cdf67380a69.json\",\"parameterValues\":[\"{'case_id': 'login001', 'case_name': '登录失败-用户名不存在', 'all_params': {'username': 'abc@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'User Missing'}\"]}", 
 "data/test-cases/2f034fe01bbd6de5.json": "{\"uid\":\"2f034fe01bbd6de5\",\"name\":\"test_login[case_data2]\",\"fullName\":\"test_case.test_login.TestCase#test_login\",\"historyId\":\"0c0cc63986cea6f8d82895932e5223da\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"status\":\"broken\",\"statusMessage\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\",\"statusTrace\":\"request = &lt;SubRequest 'login_driver' for &lt;Function test_login[case_data2]&gt;&gt;\\n\\n    @pytest.fixture(scope='function')\\n    # function每次启动一次设备信息\\n    # session 一次设备信息打开用例全运行完在关闭\\n    def login_driver(request):\\n        options = UiAutomator2Options()\\n        options.platform_name = \\\"Android\\\"\\n        options.platform_version = \\\"14\\\"\\n        options.device_name = \\\"R3CT90HL0QB\\\"\\n        options.automation_name = \\\"UiAutomator2\\\"\\n        options.app_package = \\\"com.mddoscar.velotricbike\\\"\\n        options.app_activity = \\\"com.example.velotric_app.MainActivity\\\"\\n        options.auto_grant_permissions = True\\n        options.no_reset = True\\n    \\n        driver = webdriver.Remote(\\\"http://127.0.0.1:4723\\\", options=options)\\n    \\n        time.sleep(2)\\n    \\n        # 点击 Sign 按钮\\n&gt;       driver.find_element(*sign_btn).click()\\n\\nconftest.py:28: \\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\\n    return self.execute(Command.FIND_ELEMENT, {\\\"using\\\": by, \\\"value\\\": value})[\\\"value\\\"]\\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\\n    self.error_handler.check_response(response)\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n\\nself = &lt;appium.webdriver.errorhandler.MobileErrorHandler object at 0x107f3e7d0&gt;\\nresponse = {'status': 404, 'value': '{\\\"value\\\":{\\\"error\\\":\\\"no such element\\\",\\\"message\\\":\\\"An element could not be located on the page u...ions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\\"}}'}\\n\\n    def check_response(self, response: Dict[str, Any]) -&gt; None:\\n        \\\"\\\"\\\"\\n        https://www.w3.org/TR/webdriver/#errors\\n        \\\"\\\"\\\"\\n        payload = response.get('value', '')\\n        if isinstance(payload, dict):\\n            payload_dict = payload\\n        else:\\n            try:\\n                payload_dict = json.loads(payload)\\n            except (json.JSONDecodeError, TypeError):\\n                return\\n            if not isinstance(payload_dict, dict):\\n                return\\n        value = payload_dict.get('value')\\n        if not isinstance(value, dict):\\n            return\\n        error = value.get('error')\\n        if not error:\\n            return\\n    \\n        message = value.get('message', error)\\n        stacktrace = value.get('stacktrace', '')\\n        # In theory, we should also be checking HTTP status codes.\\n        # Java client, for example, prints a warning if the actual `error`\\n        # value does not match to the response's HTTP status code.\\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\\n            error, sel_exceptions.WebDriverException\\n        )\\n        if exception_class is sel_exceptions.WebDriverException and message:\\n            if message == 'No such context found.':\\n                exception_class = appium_exceptions.NoSuchContextException\\n            elif message == 'That command could not be executed in the current context.':\\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\\n    \\n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\\n            raise sel_exceptions.UnexpectedAlertPresentException(\\n                msg=message,\\n                stacktrace=format_stacktrace(stacktrace),\\n                alert_text=value.get('data'),\\n            )\\n&gt;       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nE       Stacktrace:\\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\\nE           at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\nE           at processTicksAndRejections (node:internal/process/task_queues:105:5)\\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\nE           at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\n\\n.venv/lib/python3.10/site-packages/appium/webdriver/errorhandler.py:125: NoSuchElementException\",\"flaky\":false,\"newFailed\":false,\"newBroken\":false,\"newPassed\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"beforeStages\":[{\"name\":\"login_driver\",\"time\":{\"start\":1752552534960,\"stop\":1752552539176,\"duration\":4216},\"status\":\"broken\",\"statusMessage\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\n\",\"statusTrace\":\"  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 38, in run_old_style_hookwrapper\\n    res = yield\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 139, in _multicall\\n    teardown.throw(exception)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/setuponly.py\\\", line 36, in pytest_fixture_setup\\n    return (yield)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 121, in _multicall\\n    res = hook_impl.function(*args)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\\\", line 1195, in pytest_fixture_setup\\n    result = call_fixture_func(fixturefunc, request, kwargs)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\\\", line 922, in call_fixture_func\\n    fixture_result = next(generator)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/conftest.py\\\", line 28, in login_driver\\n    driver.find_element(*sign_btn).click()\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\\\", line 922, in find_element\\n    return self.execute(Command.FIND_ELEMENT, {\\\"using\\\": by, \\\"value\\\": value})[\\\"value\\\"]\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\\\", line 454, in execute\\n    self.error_handler.check_response(response)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/appium/webdriver/errorhandler.py\\\", line 125, in check_response\\n    raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\\n\",\"steps\":[],\"attachments\":[],\"parameters\":[],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":true,\"attachmentsCount\":0,\"attachmentStep\":false}],\"afterStages\":[],\"labels\":[{\"name\":\"epic\",\"value\":\"Velotric App应用\"},{\"name\":\"story\",\"value\":\"登录模块\"},{\"name\":\"parentSuite\",\"value\":\"test_case\"},{\"name\":\"suite\",\"value\":\"test_login\"},{\"name\":\"subSuite\",\"value\":\"TestCase\"},{\"name\":\"host\",\"value\":\"waynes-MacBook-Air.local\"},{\"name\":\"thread\",\"value\":\"1504-MainThread\"},{\"name\":\"framework\",\"value\":\"pytest\"},{\"name\":\"language\",\"value\":\"cpython3\"},{\"name\":\"package\",\"value\":\"test_case.test_login\"},{\"name\":\"resultFormat\",\"value\":\"allure2\"}],\"parameters\":[{\"name\":\"case_data\",\"value\":\"{'case_id': 'login003', 'case_name': '登录成功', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'START RIDING'}\"}],\"links\":[],\"hidden\":false,\"retry\":false,\"extra\":{\"severity\":\"normal\",\"retries\":[],\"categories\":[{\"name\":\"Test defects\",\"matchedStatuses\":[]}],\"tags\":[]},\"source\":\"2f034fe01bbd6de5.json\",\"parameterValues\":[\"{'case_id': 'login003', 'case_name': '登录成功', 'all_params': {'username': 'yangsw077@gmail.com', 'password': 'Yang123456'}, 'expected_result': 'START RIDING'}\"]}", 
 "data/test-cases/13d46111901530d1.json": "{\"uid\":\"13d46111901530d1\",\"name\":\"test_go_into_personal_info_page[case_data0]\",\"fullName\":\"test_case.test_home.TestHome#test_go_into_personal_info_page\",\"historyId\":\"34f14b1524055fe97c693e8de60382f3\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"status\":\"broken\",\"statusMessage\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\",\"statusTrace\":\"request = &lt;SubRequest 'login_driver' for &lt;Function test_go_into_personal_info_page[case_data0]&gt;&gt;\\n\\n    @pytest.fixture(scope='function')\\n    # function每次启动一次设备信息\\n    # session 一次设备信息打开用例全运行完在关闭\\n    def login_driver(request):\\n        options = UiAutomator2Options()\\n        options.platform_name = \\\"Android\\\"\\n        options.platform_version = \\\"14\\\"\\n        options.device_name = \\\"R3CT90HL0QB\\\"\\n        options.automation_name = \\\"UiAutomator2\\\"\\n        options.app_package = \\\"com.mddoscar.velotricbike\\\"\\n        options.app_activity = \\\"com.example.velotric_app.MainActivity\\\"\\n        options.auto_grant_permissions = True\\n        options.no_reset = True\\n    \\n        driver = webdriver.Remote(\\\"http://127.0.0.1:4723\\\", options=options)\\n    \\n        time.sleep(2)\\n    \\n        # 点击 Sign 按钮\\n&gt;       driver.find_element(*sign_btn).click()\\n\\nconftest.py:28: \\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:922: in find_element\\n    return self.execute(Command.FIND_ELEMENT, {\\\"using\\\": by, \\\"value\\\": value})[\\\"value\\\"]\\n.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\\n    self.error_handler.check_response(response)\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\n\\nself = &lt;appium.webdriver.errorhandler.MobileErrorHandler object at 0x107e03370&gt;\\nresponse = {'status': 404, 'value': '{\\\"value\\\":{\\\"error\\\":\\\"no such element\\\",\\\"message\\\":\\\"An element could not be located on the page u...ions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\\"}}'}\\n\\n    def check_response(self, response: Dict[str, Any]) -&gt; None:\\n        \\\"\\\"\\\"\\n        https://www.w3.org/TR/webdriver/#errors\\n        \\\"\\\"\\\"\\n        payload = response.get('value', '')\\n        if isinstance(payload, dict):\\n            payload_dict = payload\\n        else:\\n            try:\\n                payload_dict = json.loads(payload)\\n            except (json.JSONDecodeError, TypeError):\\n                return\\n            if not isinstance(payload_dict, dict):\\n                return\\n        value = payload_dict.get('value')\\n        if not isinstance(value, dict):\\n            return\\n        error = value.get('error')\\n        if not error:\\n            return\\n    \\n        message = value.get('message', error)\\n        stacktrace = value.get('stacktrace', '')\\n        # In theory, we should also be checking HTTP status codes.\\n        # Java client, for example, prints a warning if the actual `error`\\n        # value does not match to the response's HTTP status code.\\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\\n            error, sel_exceptions.WebDriverException\\n        )\\n        if exception_class is sel_exceptions.WebDriverException and message:\\n            if message == 'No such context found.':\\n                exception_class = appium_exceptions.NoSuchContextException\\n            elif message == 'That command could not be executed in the current context.':\\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\\n    \\n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\\n            raise sel_exceptions.UnexpectedAlertPresentException(\\n                msg=message,\\n                stacktrace=format_stacktrace(stacktrace),\\n                alert_text=value.get('data'),\\n            )\\n&gt;       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nE       Stacktrace:\\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\\nE           at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\nE           at processTicksAndRejections (node:internal/process/task_queues:105:5)\\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\nE           at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\n\\n.venv/lib/python3.10/site-packages/appium/webdriver/errorhandler.py:125: NoSuchElementException\",\"flaky\":false,\"newFailed\":false,\"newBroken\":false,\"newPassed\":false,\"retriesCount\":0,\"retriesStatusChange\":false,\"beforeStages\":[{\"name\":\"login_driver\",\"time\":{\"start\":1752552539215,\"stop\":1752552543479,\"duration\":4264},\"status\":\"broken\",\"statusMessage\":\"selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given search parameters.\\n    at AndroidUiautomator2Driver.findElOrEls (/Users/wayne/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.ts:86:11)\\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:60:12)\\n    at AndroidUiautomator2Driver.findElement (/Users/wayne/.nvm/versions/node/v22.16.0/lib/node_modules/appium/node_modules/@appium/base-driver/lib/basedriver/commands/find.ts:75:12)\\n\",\"statusTrace\":\"  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 38, in run_old_style_hookwrapper\\n    res = yield\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 139, in _multicall\\n    teardown.throw(exception)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/setuponly.py\\\", line 36, in pytest_fixture_setup\\n    return (yield)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/pluggy/_callers.py\\\", line 121, in _multicall\\n    res = hook_impl.function(*args)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\\\", line 1195, in pytest_fixture_setup\\n    result = call_fixture_func(fixturefunc, request, kwargs)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\\\", line 922, in call_fixture_func\\n    fixture_result = next(generator)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/conftest.py\\\", line 28, in login_driver\\n    driver.find_element(*sign_btn).click()\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\\\", line 922, in find_element\\n    return self.execute(Command.FIND_ELEMENT, {\\\"using\\\": by, \\\"value\\\": value})[\\\"value\\\"]\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\\\", line 454, in execute\\n    self.error_handler.check_response(response)\\n  File \\\"/Users/wayne/Documents/work/auto-veloapp/.venv/lib/python3.10/site-packages/appium/webdriver/errorhandler.py\\\", line 125, in check_response\\n    raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\\n\",\"steps\":[],\"attachments\":[],\"parameters\":[],\"stepsCount\":0,\"hasContent\":true,\"shouldDisplayMessage\":true,\"attachmentsCount\":0,\"attachmentStep\":false}],\"afterStages\":[],\"labels\":[{\"name\":\"story\",\"value\":\"首页模块\"},{\"name\":\"epic\",\"value\":\"velotric app应用\"},{\"name\":\"parentSuite\",\"value\":\"test_case\"},{\"name\":\"suite\",\"value\":\"test_home\"},{\"name\":\"subSuite\",\"value\":\"TestHome\"},{\"name\":\"host\",\"value\":\"waynes-MacBook-Air.local\"},{\"name\":\"thread\",\"value\":\"1504-MainThread\"},{\"name\":\"framework\",\"value\":\"pytest\"},{\"name\":\"language\",\"value\":\"cpython3\"},{\"name\":\"package\",\"value\":\"test_case.test_home\"},{\"name\":\"resultFormat\",\"value\":\"allure2\"}],\"parameters\":[{\"name\":\"case_data\",\"value\":\"{'case_id': 'home001', 'case_name': '点击个人信息按钮进入到个人信息页面', 'expected_result': 'Settings'}\"}],\"links\":[],\"hidden\":false,\"retry\":false,\"extra\":{\"severity\":\"normal\",\"retries\":[],\"categories\":[{\"name\":\"Test defects\",\"matchedStatuses\":[]}],\"tags\":[]},\"source\":\"13d46111901530d1.json\",\"parameterValues\":[\"{'case_id': 'home001', 'case_name': '点击个人信息按钮进入到个人信息页面', 'expected_result': 'Settings'}\"]}", 
 "data/attachments/3335e4fe9c47e333.png": "data:image/png;base64, ", 
 "widgets/categories.json": "{\"total\":1,\"items\":[{\"uid\":\"bdbf199525818fae7a8651db9eafe741\",\"name\":\"Test defects\",\"statistic\":{\"failed\":0,\"broken\":3,\"skipped\":0,\"passed\":0,\"unknown\":0,\"total\":3}}]}", 
 "widgets/summary.json": "{\"reportName\":\"Allure Report\",\"testRuns\":[],\"statistic\":{\"failed\":0,\"broken\":3,\"skipped\":0,\"passed\":1,\"unknown\":0,\"total\":4},\"time\":{\"start\":1752552515286,\"stop\":1752552539215,\"duration\":23929,\"minDuration\":0,\"maxDuration\":11847,\"sumDuration\":11847}}", 
 "widgets/executors.json": "[]", 
 "widgets/duration-trend.json": "[{\"data\":{\"duration\":23929}}]", 
 "widgets/status-chart.json": "[{\"uid\":\"4a3d4cdf67380a69\",\"name\":\"登录失败-用户名不存在\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"status\":\"passed\",\"severity\":\"normal\"},{\"uid\":\"d1c2c50ccf4e8bac\",\"name\":\"test_login[case_data1]\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"},{\"uid\":\"2f034fe01bbd6de5\",\"name\":\"test_login[case_data2]\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"},{\"uid\":\"13d46111901530d1\",\"name\":\"test_go_into_personal_info_page[case_data0]\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"}]", 
 "widgets/suites.json": "{\"total\":1,\"items\":[{\"uid\":\"86abcc46617c603d802c3e378b13740e\",\"name\":\"test_case\",\"statistic\":{\"failed\":0,\"broken\":3,\"skipped\":0,\"passed\":1,\"unknown\":0,\"total\":4}}]}", 
 "widgets/retry-trend.json": "[{\"data\":{\"run\":4,\"retry\":0}}]", 
 "widgets/categories-trend.json": "[{\"data\":{\"Test defects\":3}}]", 
 "widgets/severity.json": "[{\"uid\":\"d1c2c50ccf4e8bac\",\"name\":\"test_login[case_data1]\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"},{\"uid\":\"4a3d4cdf67380a69\",\"name\":\"登录失败-用户名不存在\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"status\":\"passed\",\"severity\":\"normal\"},{\"uid\":\"13d46111901530d1\",\"name\":\"test_go_into_personal_info_page[case_data0]\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"},{\"uid\":\"2f034fe01bbd6de5\",\"name\":\"test_login[case_data2]\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"}]", 
 "widgets/history-trend.json": "[{\"data\":{\"failed\":0,\"broken\":3,\"skipped\":0,\"passed\":1,\"unknown\":0,\"total\":4}}]", 
 "widgets/launch.json": "[]", 
 "widgets/behaviors.json": "{\"total\":2,\"items\":[{\"uid\":\"5fe60c0d7482b4f909b30f74aca4aa47\",\"name\":\"Velotric App应用\",\"statistic\":{\"failed\":0,\"broken\":1,\"skipped\":0,\"passed\":0,\"unknown\":0,\"total\":1}},{\"uid\":\"914b4c23401b969297ac0e674a638288\",\"name\":\"velotric app应用\",\"statistic\":{\"failed\":0,\"broken\":1,\"skipped\":0,\"passed\":0,\"unknown\":0,\"total\":1}}]}", 
 "widgets/duration.json": "[{\"uid\":\"4a3d4cdf67380a69\",\"name\":\"登录失败-用户名不存在\",\"time\":{\"start\":1752552515286,\"stop\":1752552527133,\"duration\":11847},\"status\":\"passed\",\"severity\":\"normal\"},{\"uid\":\"d1c2c50ccf4e8bac\",\"name\":\"test_login[case_data1]\",\"time\":{\"start\":1752552530597,\"stop\":1752552530597,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"},{\"uid\":\"2f034fe01bbd6de5\",\"name\":\"test_login[case_data2]\",\"time\":{\"start\":1752552534960,\"stop\":1752552534960,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"},{\"uid\":\"13d46111901530d1\",\"name\":\"test_go_into_personal_info_page[case_data0]\",\"time\":{\"start\":1752552539215,\"stop\":1752552539215,\"duration\":0},\"status\":\"broken\",\"severity\":\"normal\"}]", 
 "widgets/environment.json": "[]", 
};
    var server = sinon.fakeServer.create();

                server.respondWith("GET", "plugin/behaviors/index.js", [
                      200, { "Content-Type": "application/javascript" }, server_data["plugin/behaviors/index.js"],
                ]);
            
                server.respondWith("GET", "plugin/packages/index.js", [
                      200, { "Content-Type": "application/javascript" }, server_data["plugin/packages/index.js"],
                ]);
            
                server.respondWith("GET", "plugin/screen-diff/styles.css", [
                      200, { "Content-Type": "text/css" }, server_data["plugin/screen-diff/styles.css"],
                ]);
            
                server.respondWith("GET", "plugin/screen-diff/index.js", [
                      200, { "Content-Type": "application/javascript" }, server_data["plugin/screen-diff/index.js"],
                ]);
            
                server.respondWith("GET", "history/duration-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["history/duration-trend.json"],
                ]);
            
                server.respondWith("GET", "history/retry-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["history/retry-trend.json"],
                ]);
            
                server.respondWith("GET", "history/history.json", [
                      200, { "Content-Type": "application/json" }, server_data["history/history.json"],
                ]);
            
                server.respondWith("GET", "history/categories-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["history/categories-trend.json"],
                ]);
            
                server.respondWith("GET", "history/history-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["history/history-trend.json"],
                ]);
            
                server.respondWith("GET", "export/influxDbData.txt", [
                      200, { "Content-Type": "text/plain;charset=UTF-8" }, server_data["export/influxDbData.txt"],
                ]);
            
                server.respondWith("GET", "export/mail.html", [
                      200, { "Content-Type": "text/html" }, server_data["export/mail.html"],
                ]);
            
                server.respondWith("GET", "export/prometheusData.txt", [
                      200, { "Content-Type": "text/plain;charset=UTF-8" }, server_data["export/prometheusData.txt"],
                ]);
            
                server.respondWith("GET", "data/categories.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/categories.json"],
                ]);
            
                server.respondWith("GET", "data/categories.csv", [
                      200, { "Content-Type": "text/csv" }, server_data["data/categories.csv"],
                ]);
            
                server.respondWith("GET", "data/suites.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/suites.json"],
                ]);
            
                server.respondWith("GET", "data/timeline.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/timeline.json"],
                ]);
            
                server.respondWith("GET", "data/packages.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/packages.json"],
                ]);
            
                server.respondWith("GET", "data/suites.csv", [
                      200, { "Content-Type": "text/csv" }, server_data["data/suites.csv"],
                ]);
            
                server.respondWith("GET", "data/behaviors.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/behaviors.json"],
                ]);
            
                server.respondWith("GET", "data/behaviors.csv", [
                      200, { "Content-Type": "text/csv" }, server_data["data/behaviors.csv"],
                ]);
            
                server.respondWith("GET", "data/test-cases/d1c2c50ccf4e8bac.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/test-cases/d1c2c50ccf4e8bac.json"],
                ]);
            
                server.respondWith("GET", "data/test-cases/4a3d4cdf67380a69.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/test-cases/4a3d4cdf67380a69.json"],
                ]);
            
                server.respondWith("GET", "data/test-cases/2f034fe01bbd6de5.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/test-cases/2f034fe01bbd6de5.json"],
                ]);
            
                server.respondWith("GET", "data/test-cases/13d46111901530d1.json", [
                      200, { "Content-Type": "application/json" }, server_data["data/test-cases/13d46111901530d1.json"],
                ]);
            
                server.respondWith("GET", "data/attachments/3335e4fe9c47e333.png", [
                      200, { "Content-Type": "image/png" }, server_data["data/attachments/3335e4fe9c47e333.png"],
                ]);
            
                server.respondWith("GET", "widgets/categories.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/categories.json"],
                ]);
            
                server.respondWith("GET", "widgets/summary.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/summary.json"],
                ]);
            
                server.respondWith("GET", "widgets/executors.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/executors.json"],
                ]);
            
                server.respondWith("GET", "widgets/duration-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/duration-trend.json"],
                ]);
            
                server.respondWith("GET", "widgets/status-chart.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/status-chart.json"],
                ]);
            
                server.respondWith("GET", "widgets/suites.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/suites.json"],
                ]);
            
                server.respondWith("GET", "widgets/retry-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/retry-trend.json"],
                ]);
            
                server.respondWith("GET", "widgets/categories-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/categories-trend.json"],
                ]);
            
                server.respondWith("GET", "widgets/severity.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/severity.json"],
                ]);
            
                server.respondWith("GET", "widgets/history-trend.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/history-trend.json"],
                ]);
            
                server.respondWith("GET", "widgets/launch.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/launch.json"],
                ]);
            
                server.respondWith("GET", "widgets/behaviors.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/behaviors.json"],
                ]);
            
                server.respondWith("GET", "widgets/duration.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/duration.json"],
                ]);
            
                server.respondWith("GET", "widgets/environment.json", [
                      200, { "Content-Type": "application/json" }, server_data["widgets/environment.json"],
                ]);
            server.autoRespond = true;